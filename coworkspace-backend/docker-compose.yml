services:
  # ===============================================
  # DATABASE POSTGRESQL
  # ===============================================
  postgres:
    image: postgres:15-alpine
    container_name: coworkspace_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-coworkspace}
      POSTGRES_USER: ${DB_USER:-coworkspace_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-coworkspace_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - coworkspace_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-coworkspace_user} -d ${DB_NAME:-coworkspace}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===============================================
  # API BACKEND
  # ===============================================
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: coworkspace_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # App Settings
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000

      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-coworkspace}
      DB_USER: ${DB_USER:-coworkspace_user}
      DB_PASSWORD: ${DB_PASSWORD:-coworkspace_password}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production-min-32-chars-very-secure}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}

      # Email (Mock mode per default)
      EMAIL_FROM: ${EMAIL_FROM:-noreply@coworkspace.com}
      EMAIL_SERVICE: ${EMAIL_SERVICE:-}
      EMAIL_USER: ${EMAIL_USER:-}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-}

      # ðŸ†• Stripe (TEST MODE per progetto scolastico)
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key_here}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-whsec_your_webhook_secret_here}

      # Frontend URL
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}

      # Features
      ENABLE_SWAGGER: ${ENABLE_SWAGGER:-true}
      ENABLE_RATE_LIMITING: ${ENABLE_RATE_LIMITING:-true}
      ENABLE_REQUEST_LOGGING: ${ENABLE_REQUEST_LOGGING:-true}

      # Security
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}

      # Admin
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@coworkspace.com}

      # Project Settings
      PROJECT_MODE: educational
      ENABLE_REAL_PAYMENTS: false

    volumes:
      - ./api/src:/app/src:ro
      - ./api/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - coworkspace_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# ===============================================
# VOLUMES
# ===============================================
volumes:
  postgres_data:
    driver: local

# ===============================================
# NETWORKS
# ===============================================
networks:
  coworkspace_network:
    driver: bridge