/* ===== ANIMAZIONI COWORKSPACE ===== */

/* ===== KEYFRAMES PRINCIPALI ===== */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(40px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-40px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-40px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(40px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(60px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideInDown {
    from {
        opacity: 0;
        transform: translateY(-60px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-60px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes scaleOut {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.8);
    }
}

@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -30px, 0);
    }
    70% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -15px, 0);
    }
    90% {
        transform: translate3d(0, -4px, 0);
    }
}

@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-10px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(10px);
    }
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.1);
        opacity: 0.8;
    }
}

@keyframes heartbeat {
    0% {
        transform: scale(1);
    }
    14% {
        transform: scale(1.3);
    }
    28% {
        transform: scale(1);
    }
    42% {
        transform: scale(1.3);
    }
    70% {
        transform: scale(1);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-20px);
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes rotateIn {
    from {
        transform-origin: center;
        transform: rotate3d(0, 0, 1, -200deg);
        opacity: 0;
    }
    to {
        transform-origin: center;
        transform: translate3d(0, 0, 0);
        opacity: 1;
    }
}

@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale3d(0.3, 0.3, 0.3);
    }
    50% {
        opacity: 1;
    }
}

@keyframes zoomOut {
    from {
        opacity: 1;
    }
    50% {
        opacity: 0;
        transform: scale3d(0.3, 0.3, 0.3);
    }
    to {
        opacity: 0;
    }
}

@keyframes flipInX {
    from {
        transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }
    40% {
        transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
        animation-timing-function: ease-in;
    }
    60% {
        transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
        opacity: 1;
    }
    80% {
        transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
    }
    to {
        transform: perspective(400px);
    }
}

@keyframes flipInY {
    from {
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }
    40% {
        transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        animation-timing-function: ease-in;
    }
    60% {
        transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        opacity: 1;
    }
    80% {
        transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
    }
    to {
        transform: perspective(400px);
    }
}

@keyframes rollIn {
    from {
        opacity: 0;
        transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}

@keyframes lightSpeedIn {
    from {
        transform: translate3d(100%, 0, 0) skewX(-30deg);
        opacity: 0;
    }
    60% {
        transform: skewX(20deg);
        opacity: 1;
    }
    80% {
        transform: skewX(-5deg);
    }
    to {
        transform: translate3d(0, 0, 0);
    }
}

/* ===== GRADIENT ANIMATIONS ===== */
@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes colorChange {
    0% { color: var(--primary-solid); }
    25% { color: var(--success); }
    50% { color: var(--warning); }
    75% { color: var(--error); }
    100% { color: var(--primary-solid); }
}

/* ===== LOADING ANIMATIONS ===== */
@keyframes spinner {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dots {
    0%, 80%, 100% {
        transform: scale(0);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes wave {
    0%, 60%, 100% {
        transform: initial;
    }
    30% {
        transform: translateY(-15px);
    }
}

@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes blink {
    0%, 50% {
        opacity: 1;
    }
    51%, 100% {
        opacity: 0;
    }
}

/* ===== UTILITY CLASSES PER ANIMAZIONI ===== */
.animate-fadeIn {
    animation: fadeIn 0.6s ease-out;
}

.animate-fadeInUp {
    animation: fadeInUp 0.6s ease-out;
}

.animate-fadeInDown {
    animation: fadeInDown 0.6s ease-out;
}

.animate-fadeInLeft {
    animation: fadeInLeft 0.6s ease-out;
}

.animate-fadeInRight {
    animation: fadeInRight 0.6s ease-out;
}

.animate-slideInUp {
    animation: slideInUp 0.8s ease-out;
}

.animate-slideInDown {
    animation: slideInDown 0.8s ease-out;
}

.animate-slideInLeft {
    animation: slideInLeft 0.8s ease-out;
}

.animate-slideInRight {
    animation: slideInRight 0.8s ease-out;
}

.animate-scaleIn {
    animation: scaleIn 0.5s ease-out;
}

.animate-bounce {
    animation: bounce 1s ease-out;
}

.animate-shake {
    animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97);
}

.animate-pulse {
    animation: pulse 2s infinite;
}

.animate-heartbeat {
    animation: heartbeat 1.5s ease-in-out infinite;
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-rotate {
    animation: rotate 2s linear infinite;
}

.animate-zoomIn {
    animation: zoomIn 0.6s ease-out;
}

.animate-flipInX {
    animation: flipInX 0.75s ease-out;
}

.animate-flipInY {
    animation: flipInY 0.75s ease-out;
}

.animate-rollIn {
    animation: rollIn 0.6s ease-out;
}

.animate-lightSpeedIn {
    animation: lightSpeedIn 0.6s ease-out;
}

.animate-gradientShift {
    background: linear-gradient(-45deg, var(--primary-solid), var(--secondary), var(--accent), var(--primary-solid));
    background-size: 400% 400%;
    animation: gradientShift 3s ease infinite;
}

.animate-typing {
    overflow: hidden;
    border-right: 2px solid var(--primary-solid);
    white-space: nowrap;
    animation: typing 3.5s steps(40, end), blink 0.75s step-end infinite;
}

/* ===== DELAY CLASSES ===== */
.animate-delay-1 { animation-delay: 0.1s; }
.animate-delay-2 { animation-delay: 0.2s; }
.animate-delay-3 { animation-delay: 0.3s; }
.animate-delay-4 { animation-delay: 0.4s; }
.animate-delay-5 { animation-delay: 0.5s; }
.animate-delay-6 { animation-delay: 0.6s; }
.animate-delay-7 { animation-delay: 0.7s; }
.animate-delay-8 { animation-delay: 0.8s; }
.animate-delay-9 { animation-delay: 0.9s; }
.animate-delay-10 { animation-delay: 1s; }

/* ===== DURATION CLASSES ===== */
.animate-duration-fast { animation-duration: 0.3s; }
.animate-duration-normal { animation-duration: 0.6s; }
.animate-duration-slow { animation-duration: 1s; }
.animate-duration-slower { animation-duration: 1.5s; }

/* ===== HOVER ANIMATIONS ===== */
.hover-scale:hover {
    transform: scale(1.05);
    transition: transform var(--transition-base);
}

.hover-scale-sm:hover {
    transform: scale(1.02);
    transition: transform var(--transition-base);
}

.hover-scale-lg:hover {
    transform: scale(1.1);
    transition: transform var(--transition-base);
}

.hover-lift:hover {
    transform: translateY(-5px);
    transition: transform var(--transition-base);
}

.hover-lift-lg:hover {
    transform: translateY(-10px);
    transition: transform var(--transition-base);
}

.hover-rotate:hover {
    transform: rotate(5deg);
    transition: transform var(--transition-base);
}

.hover-skew:hover {
    transform: skew(-5deg, -2deg);
    transition: transform var(--transition-base);
}

.hover-glow:hover {
    box-shadow: 0 0 20px rgba(102, 126, 234, 0.4);
    transition: box-shadow var(--transition-base);
}

.hover-blur:hover {
    filter: blur(2px);
    transition: filter var(--transition-base);
}

.hover-brightness:hover {
    filter: brightness(1.2);
    transition: filter var(--transition-base);
}

.hover-contrast:hover {
    filter: contrast(1.2);
    transition: filter var(--transition-base);
}

.hover-saturate:hover {
    filter: saturate(1.5);
    transition: filter var(--transition-base);
}

.hover-grayscale:hover {
    filter: grayscale(1);
    transition: filter var(--transition-base);
}

.hover-sepia:hover {
    filter: sepia(1);
    transition: filter var(--transition-base);
}

/* ===== LOADING SPINNERS ===== */
.spinner-dots {
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
}

.spinner-dots div {
    position: absolute;
    top: 33px;
    width: 13px;
    height: 13px;
    border-radius: 50%;
    background: var(--primary-solid);
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
}

.spinner-dots div:nth-child(1) {
    left: 8px;
    animation: dots 0.6s infinite;
}

.spinner-dots div:nth-child(2) {
    left: 8px;
    animation: dots 0.6s infinite;
    animation-delay: -0.2s;
}

.spinner-dots div:nth-child(3) {
    left: 32px;
    animation: dots 0.6s infinite;
    animation-delay: -0.1s;
}

.spinner-dots div:nth-child(4) {
    left: 56px;
    animation: dots 0.6s infinite;
}

.spinner-wave {
    display: inline-block;
    width: 70px;
    height: 40px;
}

.spinner-wave div {
    display: inline-block;
    width: 6px;
    height: 100%;
    background-color: var(--primary-solid);
    animation: wave 1.2s infinite ease-in-out;
}

.spinner-wave div:nth-child(2) { animation-delay: -1.1s; }
.spinner-wave div:nth-child(3) { animation-delay: -1.0s; }
.spinner-wave div:nth-child(4) { animation-delay: -0.9s; }
.spinner-wave div:nth-child(5) { animation-delay: -0.8s; }

.spinner-pulse {
    display: inline-block;
    width: 40px;
    height: 40px;
    background-color: var(--primary-solid);
    border-radius: 100%;
    animation: pulse 1.0s infinite ease-in-out;
}

/* ===== INTERSECTION OBSERVER ANIMATIONS ===== */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
}

.animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
}

.animate-on-scroll-left {
    opacity: 0;
    transform: translateX(-30px);
    transition: all 0.6s ease-out;
}

.animate-on-scroll-left.animate-in {
    opacity: 1;
    transform: translateX(0);
}

.animate-on-scroll-right {
    opacity: 0;
    transform: translateX(30px);
    transition: all 0.6s ease-out;
}

.animate-on-scroll-right.animate-in {
    opacity: 1;
    transform: translateX(0);
}

.animate-on-scroll-scale {
    opacity: 0;
    transform: scale(0.8);
    transition: all 0.6s ease-out;
}

.animate-on-scroll-scale.animate-in {
    opacity: 1;
    transform: scale(1);
}

/* ===== STAGGER ANIMATIONS ===== */
.stagger-children > * {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
}

.stagger-children > *:nth-child(1) { animation-delay: 0.1s; }
.stagger-children > *:nth-child(2) { animation-delay: 0.2s; }
.stagger-children > *:nth-child(3) { animation-delay: 0.3s; }
.stagger-children > *:nth-child(4) { animation-delay: 0.4s; }
.stagger-children > *:nth-child(5) { animation-delay: 0.5s; }
.stagger-children > *:nth-child(6) { animation-delay: 0.6s; }
.stagger-children > *:nth-child(7) { animation-delay: 0.7s; }
.stagger-children > *:nth-child(8) { animation-delay: 0.8s; }
.stagger-children > *:nth-child(9) { animation-delay: 0.9s; }
.stagger-children > *:nth-child(10) { animation-delay: 1s; }

/* ===== PARTICLE ANIMATIONS ===== */
.particle-float {
    position: relative;
    overflow: hidden;
}

.particle-float::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='4'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
    animation: float 20s ease-in-out infinite;
    pointer-events: none;
}

/* ===== MORPHING ANIMATIONS ===== */
.morph-button {
    position: relative;
    overflow: hidden;
}

.morph-button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transition: all 0.6s ease;
    transform: translate(-50%, -50%);
}

.morph-button:hover::before {
    width: 300px;
    height: 300px;
}

/* ===== TEXT ANIMATIONS ===== */
.text-reveal {
    overflow: hidden;
    position: relative;
}

.text-reveal::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--primary-solid);
    animation: textReveal 1.5s ease-in-out;
}

@keyframes textReveal {
    0% {
        transform: translateX(0);
    }
    50% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(100%);
    }
}

.text-slide-up {
    overflow: hidden;
    display: inline-block;
}

.text-slide-up span {
    display: inline-block;
    transform: translateY(100%);
    animation: slideTextUp 0.8s ease-out forwards;
}

@keyframes slideTextUp {
    to {
        transform: translateY(0);
    }
}

/* ===== BACKGROUND ANIMATIONS ===== */
.bg-animate-gradient {
    background: linear-gradient(-45deg,
    var(--primary-solid),
    #f093fb,
    #4facfe,
    var(--primary-solid)
    );
    background-size: 400% 400%;
    animation: gradientShift 4s ease infinite;
}

.bg-animate-pulse {
    animation: backgroundPulse 2s ease-in-out infinite;
}

@keyframes backgroundPulse {
    0%, 100% {
        background-color: var(--gray-50);
    }
    50% {
        background-color: var(--gray-100);
    }
}

/* ===== SCROLL ANIMATIONS ===== */
.parallax {
    transform: translateY(0);
    transition: transform 0.1s ease-out;
}

.sticky-reveal {
    position: sticky;
    top: 100px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    transition: all var(--transition-base);
}

.sticky-reveal.scrolled {
    box-shadow: var(--shadow-lg);
    border-bottom: 1px solid var(--gray-200);
}

/* ===== PERFORMANCE OPTIMIZATIONS ===== */
.animate-gpu {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000;
}

.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-auto {
    will-change: auto;
}

/* ===== ACCESSIBILITY - REDUCED MOTION ===== */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }

    .animate-fadeIn,
    .animate-fadeInUp,
    .animate-fadeInDown,
    .animate-fadeInLeft,
    .animate-fadeInRight,
    .animate-slideInUp,
    .animate-slideInDown,
    .animate-slideInLeft,
    .animate-slideInRight,
    .animate-scaleIn,
    .animate-bounce,
    .animate-shake,
    .animate-pulse,
    .animate-heartbeat,
    .animate-float,
    .animate-rotate,
    .animate-zoomIn,
    .animate-flipInX,
    .animate-flipInY,
    .animate-rollIn,
    .animate-lightSpeedIn {
        animation: none !important;
        opacity: 1 !important;
        transform: none !important;
    }

    .hover-scale:hover,
    .hover-scale-sm:hover,
    .hover-scale-lg:hover,
    .hover-lift:hover,
    .hover-lift-lg:hover,
    .hover-rotate:hover,
    .hover-skew:hover {
        transform: none !important;
    }
}

/* ===== PRINT ANIMATIONS ===== */
@media print {
    *,
    *::before,
    *::after {
        animation: none !important;
        transition: none !important;
        transform: none !important;
        filter: none !important;
        opacity: 1 !important;
    }
}